<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.springboot</groupId>
    <artifactId>jpa</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>jpa</name>
    <description>jpa</description>
    <properties>
        <java.version>11</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.7</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>2.13.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- JaCoCo 플러그인 설정-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.7</version>
                <!-- 일부 클래스를 커버리지 측정 대상에서 제외-->
                <configuration>
                    <excludes>**/ProductServiceImpl.class</excludes>
                </configuration>
                <!-- execution 은 기본으로 goal을 포함하며 설정한 값에 따라
                추가 설정이 필요한 내용을 configuration과 rule을 통해 작성한다.-->
                <executions>
                    <execution>
                        <goals>
                            <!-- 테스트 중인 애플리케이션에 VM인수를 전달하는 jaCoCo 런타임 에이전트의 속성을 준비
                            에이전트는 maven-surefire-plugin을 통해 테스트한 결과를 가져오는 역할을 수행 -->
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>test</phase>
                        <!-- 단일 프로젝트 테스트를 마치면 생성되는 코드 검사 보고서를
                        다양한 형식(HTML, XML, CSS 중에서 선택할 수 있다. -->
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- 코드 커버리지의 매트릭 충족 여부를 검사한다. 메트릭은 테스트 커버리지를 측정하는데 필요한 지표를 의미한다.
                        매트릭은 check가 설정된 execution 태크 내에서 rule을 통해 설정한다 -->
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <!-- Element는 코드 커버리지를 체크하는데 필요한 범위 기준을 설정 -->
                                    <element>
                                        BUNDLE
                                    </element>
                                    <limits>
                                        <limit>
                                            <!-- 자바의 바이트코드 명령 수를 기준으로 커버리지가 80퍼센트 달성하는 것을 limit으로 설정 -->
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                    <element>
                                        METHOD
                                    </element>
                                    <limits>
                                        <limit>
                                            <!-- 메서드 단위로 전체라인 수를 최대 50줄로 설정 -->
                                            <counter>LINE</counter>
                                            <value>TOTALCOUNT</value>
                                            <minimum>50</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>